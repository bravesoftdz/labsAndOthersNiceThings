/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000000000.0;
	SIMULATION_TIME = 100000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 2000000000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("address")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("address[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("address[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "address";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cs")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("data_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("data_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("data_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "data_out";
}

SIGNAL("rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("address[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000000000.0;
	}
}

TRANSITION_LIST("address[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 52000000000.0;
		LEVEL 1 FOR 48000000000.0;
	}
}

TRANSITION_LIST("address[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 26000000000.0;
			LEVEL 1 FOR 26000000000.0;
		}
		LEVEL 0 FOR 26000000000.0;
		LEVEL 1 FOR 22000000000.0;
	}
}

TRANSITION_LIST("address[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 13000000000.0;
			LEVEL 1 FOR 13000000000.0;
		}
		LEVEL 0 FOR 13000000000.0;
		LEVEL 1 FOR 9000000000.0;
	}
}

TRANSITION_LIST("address[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 6500000000.0;
			LEVEL 1 FOR 6500000000.0;
		}
		LEVEL 0 FOR 6500000000.0;
		LEVEL 1 FOR 2500000000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 1000000000.0;
			LEVEL 1 FOR 1000000000.0;
		}
	}
}

TRANSITION_LIST("cs")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 2500000000.0;
			LEVEL 1 FOR 2500000000.0;
		}
	}
}

TRANSITION_LIST("data_out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.713;
		LEVEL 0 FOR 499999999.941;
		LEVEL Z FOR 3500000000.059;
		LEVEL 0 FOR 1499999999.941;
		LEVEL Z FOR 8499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 2499999999.657;
		LEVEL 1 FOR 2000000000.368;
		LEVEL Z FOR 8000000000.034;
		LEVEL 0 FOR 2499999999.941;
		LEVEL Z FOR 9500000000.059;
		LEVEL 0 FOR 499999999.941;
		LEVEL Z FOR 3499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 8499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 2500000000.059;
		LEVEL 0 FOR 1999999999.966;
		LEVEL Z FOR 8000000000.034;
		LEVEL 0 FOR 2499999999.941;
		LEVEL Z FOR 7499999999.657;
		LEVEL 1 FOR 2500000000.343;
		LEVEL Z FOR 3499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 7499999993.346;
	}
}

TRANSITION_LIST("data_out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.4;
		LEVEL 0 FOR 499999999.984;
		LEVEL Z FOR 3500000000.016;
		LEVEL 0 FOR 1499999999.984;
		LEVEL Z FOR 8499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 2499999999.614;
		LEVEL 1 FOR 2000000000.411;
		LEVEL Z FOR 7999999999.991;
		LEVEL 0 FOR 2499999999.984;
		LEVEL Z FOR 9500000000.016;
		LEVEL 0 FOR 499999999.984;
		LEVEL Z FOR 3499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 8499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 2499999999.614;
		LEVEL 1 FOR 0.848;
		LEVEL 0 FOR 1999999999.563;
		LEVEL Z FOR 7999999999.991;
		LEVEL 0 FOR 2499999999.984;
		LEVEL Z FOR 7499999999.614;
		LEVEL 1 FOR 2500000000.386;
		LEVEL Z FOR 3499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 7499999993.616;
	}
}

TRANSITION_LIST("data_out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.42;
		LEVEL 0 FOR 499999999.984;
		LEVEL Z FOR 3500000000.016;
		LEVEL 0 FOR 1499999999.984;
		LEVEL Z FOR 8499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 2499999999.614;
		LEVEL 1 FOR 2000000000.411;
		LEVEL Z FOR 7999999999.991;
		LEVEL 0 FOR 2499999999.984;
		LEVEL Z FOR 9500000000.016;
		LEVEL 0 FOR 499999999.984;
		LEVEL Z FOR 3499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 8499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 2499999999.614;
		LEVEL 1 FOR 0.808;
		LEVEL 0 FOR 1999999999.603;
		LEVEL Z FOR 7999999999.991;
		LEVEL 0 FOR 2499999999.984;
		LEVEL Z FOR 7499999999.614;
		LEVEL 1 FOR 2500000000.386;
		LEVEL Z FOR 3499999999.614;
		LEVEL 1 FOR 1500000000.386;
		LEVEL Z FOR 7499999993.596;
	}
}

TRANSITION_LIST("data_out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.603;
		LEVEL 0 FOR 499999999.944;
		LEVEL Z FOR 3500000000.056;
		LEVEL 0 FOR 1499999999.944;
		LEVEL Z FOR 8499999999.654;
		LEVEL 1 FOR 1500000000.346;
		LEVEL Z FOR 2499999999.654;
		LEVEL 1 FOR 2000000000.371;
		LEVEL Z FOR 8000000000.031;
		LEVEL 0 FOR 2499999999.944;
		LEVEL Z FOR 9500000000.056;
		LEVEL 0 FOR 499999999.944;
		LEVEL Z FOR 3499999999.654;
		LEVEL 1 FOR 1500000000.346;
		LEVEL Z FOR 8499999999.654;
		LEVEL 1 FOR 1500000000.346;
		LEVEL Z FOR 2500000000.056;
		LEVEL 0 FOR 1999999999.969;
		LEVEL Z FOR 8000000000.031;
		LEVEL 0 FOR 2499999999.944;
		LEVEL Z FOR 7499999999.654;
		LEVEL 1 FOR 2500000000.346;
		LEVEL Z FOR 3499999999.654;
		LEVEL 1 FOR 1500000000.346;
		LEVEL Z FOR 7499999993.453;
	}
}

TRANSITION_LIST("data_out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000007.274;
		LEVEL 0 FOR 499999999.88;
		LEVEL Z FOR 3499999999.718;
		LEVEL 1 FOR 1500000000.282;
		LEVEL Z FOR 8499999999.718;
		LEVEL 1 FOR 1500000000.282;
		LEVEL Z FOR 2499999999.718;
		LEVEL 1 FOR 2000000000.307;
		LEVEL Z FOR 8000000000.095;
		LEVEL 0 FOR 2499999999.88;
		LEVEL Z FOR 9499999999.718;
		LEVEL 1 FOR 500000000.282;
		LEVEL Z FOR 3499999999.718;
		LEVEL 1 FOR 1500000000.282;
		LEVEL Z FOR 8499999999.718;
		LEVEL 1 FOR 1500000000.282;
		LEVEL Z FOR 2500000000.12;
		LEVEL 0 FOR 1999999999.905;
		LEVEL Z FOR 7999999999.693;
		LEVEL 1 FOR 2500000000.282;
		LEVEL Z FOR 7499999999.718;
		LEVEL 1 FOR 2500000000.282;
		LEVEL Z FOR 3499999999.718;
		LEVEL 1 FOR 1500000000.282;
		LEVEL Z FOR 7499999992.846;
	}
}

TRANSITION_LIST("data_out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.408;
		LEVEL 1 FOR 500000000.343;
		LEVEL Z FOR 3500000000.059;
		LEVEL 0 FOR 1499999999.941;
		LEVEL Z FOR 8499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 2499999999.657;
		LEVEL 1 FOR 2000000000.368;
		LEVEL Z FOR 8000000000.034;
		LEVEL 0 FOR 2000000000.097;
		LEVEL 1 FOR 499999999.844;
		LEVEL Z FOR 9499999999.657;
		LEVEL 1 FOR 500000000.343;
		LEVEL Z FOR 3499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 8499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 2500000000.059;
		LEVEL 0 FOR 1999999999.966;
		LEVEL Z FOR 8000000000.034;
		LEVEL 0 FOR 2000000000.097;
		LEVEL 1 FOR 499999999.844;
		LEVEL Z FOR 7499999999.657;
		LEVEL 1 FOR 2500000000.343;
		LEVEL Z FOR 3499999999.657;
		LEVEL 1 FOR 1500000000.343;
		LEVEL Z FOR 7499999993.249;
	}
}

TRANSITION_LIST("data_out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.396;
		LEVEL 0 FOR 0.501;
		LEVEL 1 FOR 499999999.487;
		LEVEL Z FOR 3500000000.012;
		LEVEL 0 FOR 0.501;
		LEVEL 1 FOR 1499999999.487;
		LEVEL Z FOR 8499999999.61;
		LEVEL 1 FOR 1500000000.39;
		LEVEL Z FOR 2499999999.61;
		LEVEL 1 FOR 2000000000.415;
		LEVEL Z FOR 7999999999.987;
		LEVEL 0 FOR 0.501;
		LEVEL 1 FOR 1999999999.934;
		LEVEL 0 FOR 499999999.553;
		LEVEL Z FOR 9500000000.012;
		LEVEL 0 FOR 0.501;
		LEVEL 1 FOR 499999999.487;
		LEVEL Z FOR 3499999999.61;
		LEVEL 1 FOR 1500000000.39;
		LEVEL Z FOR 8499999999.61;
		LEVEL 1 FOR 1500000000.39;
		LEVEL Z FOR 2499999999.61;
		LEVEL 1 FOR 0.837;
		LEVEL 0 FOR 1999999999.578;
		LEVEL Z FOR 7999999999.987;
		LEVEL 0 FOR 0.501;
		LEVEL 1 FOR 1999999999.934;
		LEVEL 0 FOR 499999999.553;
		LEVEL Z FOR 7499999999.61;
		LEVEL 1 FOR 2500000000.39;
		LEVEL Z FOR 3499999999.61;
		LEVEL 1 FOR 1500000000.39;
		LEVEL Z FOR 7499999993.616;
	}
}

TRANSITION_LIST("data_out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 7000000006.827;
		LEVEL 0 FOR 499999999.926;
		LEVEL Z FOR 3500000000.074;
		LEVEL 0 FOR 1499999999.926;
		LEVEL Z FOR 8499999999.672;
		LEVEL 1 FOR 1500000000.328;
		LEVEL Z FOR 2499999999.672;
		LEVEL 1 FOR 2000000000.353;
		LEVEL Z FOR 8000000000.049;
		LEVEL 0 FOR 2000000000.054;
		LEVEL 1 FOR 499999999.872;
		LEVEL Z FOR 9500000000.074;
		LEVEL 0 FOR 499999999.926;
		LEVEL Z FOR 3499999999.672;
		LEVEL 1 FOR 1500000000.328;
		LEVEL Z FOR 8499999999.672;
		LEVEL 1 FOR 1500000000.328;
		LEVEL Z FOR 2500000000.074;
		LEVEL 0 FOR 1999999999.951;
		LEVEL Z FOR 8000000000.049;
		LEVEL 0 FOR 2499999999.926;
		LEVEL Z FOR 7499999999.672;
		LEVEL 1 FOR 2500000000.328;
		LEVEL Z FOR 3499999999.672;
		LEVEL 1 FOR 1500000000.328;
		LEVEL Z FOR 7499999993.247;
	}
}

TRANSITION_LIST("rd")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 6500000000.0;
			LEVEL 1 FOR 6500000000.0;
		}
		LEVEL 0 FOR 6500000000.0;
		LEVEL 1 FOR 2500000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "address";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "address[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "address[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cs";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "data_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "data_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

TIME_BAR
{
	TIME = 22100;
	MASTER = TRUE;
}
;
